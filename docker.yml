---
 - name: "Install Docker and setup Elasticsearch container"
   hosts: localhost
   become: no
   vars:
           - region: "ap-south-1"
   vars_files:
           - aws_creds.yml
   tasks:
           - name: "Fetch Docker instance details"
             amazon.aws.ec2_instance_info:
                     aws_access_key: "{{ access_key }}"
                     aws_secret_key: "{{ secret_key }}"
                     region: "{{ region }}"
                     filters:
                             "tag:Name": "Docker-worker"
                             instance-state-name: [ "running" ]
             register: aws_instances

           - name: "Generate Dynamic Inventory"
             add_host:
                     groups: "docker-server"
                     hostname: "{{ item.public_ip_address }}"
                     ansible_ssh_user: "ec2-user"
                     ansible_ssh_port: "22"
                     ansible_ssh_private_key_file: "mykey.pem"
                     ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
             with_items: "{{ aws_instances.instances }}"

 - name: "Docker Container Installation"
   become: true
   hosts: docker-server
   vars:
           ansible_python_interpreter: /usr/bin/python
   gather_facts: false
   vars_files:
           - docker_vars.yml

   tasks:
           - name: "Install Docker"
             yum:
                     name:
                             - docker
                             - pip
                     state: present

           - name: "Remove Python-requests package"
             yum:
                     name: python-requests.noarch
                     state: absent

           - name: "Install supporting package"
             pip:
                     name: docker
                     state: present

           - name: "Attach ec2-user to docker group"
             user:
                     name: "ec2-user"
                     groups:
                             - docker
                     append: true

           - name: "Restart Docker service"
             service:
                     name: docker
                     state: restarted
                     enabled: true

           - name: "Run Elasticsearch container"
             docker_container:
                     name: elasticsearch
                     image: "elasticsearch:7.17.10"
                     recreate: yes
                     published_ports:
                             - "{{ host_port }}:9200"
                     cpus: ".25"
                     env:
                             discovery.type: "single-node"
